@model IEnumerable<Ecommerce.Web.Model.BasketItemViewModel>

@{ ViewData["Title"] = "Basket"; }

<style>
    .card {
        border-radius: 20px;
        background-color: lightblue;
        width: 600px;
    }

        .card:hover {
            color: blueviolet;
            background-image: linear-gradient(to right,#000428, #004e92);
        }

    img {
        border-radius: 20px;
        margin: 5px 5px 5px 5px;
        width: 200px;
        height: 200px
    }
</style>
<h2 class="text-center">Checkout Successfull!</h2>
<div class="container">
    @if (Model.Any())
    {
@foreach (var item in Model)
{

<div class="card mb-5 shadow-lg mx-auto">

    <div class="row">
        <div class="col">
            <img class="ms-4" src="~/ProductImages/@item.Product.Photo" />

        </div>
        <div class="col d-flex flex-column">
            <div class="h3">
                Name: @Html.DisplayFor(modelItem => item.Product.Name)
            </div>
            <div class="h3">
                Price :

                @*@Html.DisplayFor(modelItem => item.Product.Price)*@

                @{ var x = item.Product.Price * item.Quantity; }
                @x
            </div>
            <div class="h3">
                Quantity : @item.Quantity
                @Html.DropDownListFor(modelItem => item.Quantity,
                  Enumerable.Range(1, 10).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() })
                  , new { @onchange = "$('.update" + @item.Id + "').attr('href',$('.update" + @item.Id + "').attr('href')+this.value);", @class = "qty" + @item.Id }
                  )

                @Html.ActionLink("Update", "ChangeQuantity", "Basket",
                  routeValues: new { basketItemId = item.Id, quantity = "0" }, htmlAttributes: new { @class = "update" + @item.Id })



            </div>
            <div class="ms-auto mt-auto mb-4 me-5">
                @Html.ActionLink("Remove", "DeleteItemFromBasket", "Basket", routeValues: new { basketItemId = item.Id }, htmlAttributes: new { @class = "btn-danger btn-lg" })
            </div>
        </div>

    </div>


</div>}
                <div class="d-flex justify-content-around">
                    @Html.ActionLink("Checkout", "Checkout", "Basket", null, new { @class = "btn-lg btn-success" })
                    @Html.ActionLink("Empty basket", "DeleteAllBasketItems", "Basket", routeValues: new { userId = 1 }, htmlAttributes: new { @class = "btn-lg btn-danger" })
                </div> @*         @Html.ActionLink("Checkout", "Checkout", "Basket", null, new { @class= "btn-lg btn-success"})
                    @Html.ActionLink("Remove All Item from basket", "DeleteAllBasketItems", "Basket", routeValues: new { userId = 1 }, htmlAttributes: null)*@ }
            else
            {
<div class="text-center h1">Your basket is empty!</div>
                <div class="text-center h1">Thank You</div>}
    <div class="d-flex justify-content-center mt-5">
        <a href="../Product/Index" class="btn-dark btn-lg">Back to Products</a>
    </div>
</div>
